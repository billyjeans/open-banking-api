/*
 * Account and Transaction API Specification
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.7
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.OBReadOffer1DataAmount;
import org.openapitools.client.model.OBReadOffer1DataFee;
import org.threeten.bp.OffsetDateTime;

/**
 * OBReadOffer1DataOffer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-29T19:18:25.258264300+02:00[Europe/Berlin]")
public class OBReadOffer1DataOffer {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "AccountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_OFFER_ID = "OfferId";
  @SerializedName(SERIALIZED_NAME_OFFER_ID)
  private String offerId;

  /**
   * Offer type, in a coded form.
   */
  @JsonAdapter(OfferTypeEnum.Adapter.class)
  public enum OfferTypeEnum {
    BALANCETRANSFER("BalanceTransfer"),
    
    LIMITINCREASE("LimitIncrease"),
    
    MONEYTRANSFER("MoneyTransfer"),
    
    OTHER("Other"),
    
    PROMOTIONALRATE("PromotionalRate");

    private String value;

    OfferTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OfferTypeEnum fromValue(String value) {
      for (OfferTypeEnum b : OfferTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OfferTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OfferTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OfferTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OfferTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_OFFER_TYPE = "OfferType";
  @SerializedName(SERIALIZED_NAME_OFFER_TYPE)
  private OfferTypeEnum offerType;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_START_DATE_TIME = "StartDateTime";
  @SerializedName(SERIALIZED_NAME_START_DATE_TIME)
  private OffsetDateTime startDateTime;

  public static final String SERIALIZED_NAME_END_DATE_TIME = "EndDateTime";
  @SerializedName(SERIALIZED_NAME_END_DATE_TIME)
  private OffsetDateTime endDateTime;

  public static final String SERIALIZED_NAME_RATE = "Rate";
  @SerializedName(SERIALIZED_NAME_RATE)
  private String rate;

  public static final String SERIALIZED_NAME_VALUE = "Value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Integer value;

  public static final String SERIALIZED_NAME_TERM = "Term";
  @SerializedName(SERIALIZED_NAME_TERM)
  private String term;

  public static final String SERIALIZED_NAME_U_R_L = "URL";
  @SerializedName(SERIALIZED_NAME_U_R_L)
  private String URL;

  public static final String SERIALIZED_NAME_AMOUNT = "Amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private OBReadOffer1DataAmount amount;

  public static final String SERIALIZED_NAME_FEE = "Fee";
  @SerializedName(SERIALIZED_NAME_FEE)
  private OBReadOffer1DataFee fee;


  public OBReadOffer1DataOffer accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public OBReadOffer1DataOffer offerId(String offerId) {
    
    this.offerId = offerId;
    return this;
  }

   /**
   * A unique and immutable identifier used to identify the offer resource. This identifier has no meaning to the account owner.
   * @return offerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique and immutable identifier used to identify the offer resource. This identifier has no meaning to the account owner.")

  public String getOfferId() {
    return offerId;
  }


  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }


  public OBReadOffer1DataOffer offerType(OfferTypeEnum offerType) {
    
    this.offerType = offerType;
    return this;
  }

   /**
   * Offer type, in a coded form.
   * @return offerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Offer type, in a coded form.")

  public OfferTypeEnum getOfferType() {
    return offerType;
  }


  public void setOfferType(OfferTypeEnum offerType) {
    this.offerType = offerType;
  }


  public OBReadOffer1DataOffer description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Further details of the offer.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Further details of the offer.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public OBReadOffer1DataOffer startDateTime(OffsetDateTime startDateTime) {
    
    this.startDateTime = startDateTime;
    return this;
  }

   /**
   * Date and time at which the offer starts.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
   * @return startDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date and time at which the offer starts.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00")

  public OffsetDateTime getStartDateTime() {
    return startDateTime;
  }


  public void setStartDateTime(OffsetDateTime startDateTime) {
    this.startDateTime = startDateTime;
  }


  public OBReadOffer1DataOffer endDateTime(OffsetDateTime endDateTime) {
    
    this.endDateTime = endDateTime;
    return this;
  }

   /**
   * Date and time at which the offer ends.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
   * @return endDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date and time at which the offer ends.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00")

  public OffsetDateTime getEndDateTime() {
    return endDateTime;
  }


  public void setEndDateTime(OffsetDateTime endDateTime) {
    this.endDateTime = endDateTime;
  }


  public OBReadOffer1DataOffer rate(String rate) {
    
    this.rate = rate;
    return this;
  }

   /**
   * Rate associated with the offer type.
   * @return rate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Rate associated with the offer type.")

  public String getRate() {
    return rate;
  }


  public void setRate(String rate) {
    this.rate = rate;
  }


  public OBReadOffer1DataOffer value(Integer value) {
    
    this.value = value;
    return this;
  }

   /**
   * Value associated with the offer type.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Value associated with the offer type.")

  public Integer getValue() {
    return value;
  }


  public void setValue(Integer value) {
    this.value = value;
  }


  public OBReadOffer1DataOffer term(String term) {
    
    this.term = term;
    return this;
  }

   /**
   * Further details of the term of the offer.
   * @return term
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Further details of the term of the offer.")

  public String getTerm() {
    return term;
  }


  public void setTerm(String term) {
    this.term = term;
  }


  public OBReadOffer1DataOffer URL(String URL) {
    
    this.URL = URL;
    return this;
  }

   /**
   * URL (Uniform Resource Locator) where documentation on the offer can be found
   * @return URL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL (Uniform Resource Locator) where documentation on the offer can be found")

  public String getURL() {
    return URL;
  }


  public void setURL(String URL) {
    this.URL = URL;
  }


  public OBReadOffer1DataOffer amount(OBReadOffer1DataAmount amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OBReadOffer1DataAmount getAmount() {
    return amount;
  }


  public void setAmount(OBReadOffer1DataAmount amount) {
    this.amount = amount;
  }


  public OBReadOffer1DataOffer fee(OBReadOffer1DataFee fee) {
    
    this.fee = fee;
    return this;
  }

   /**
   * Get fee
   * @return fee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OBReadOffer1DataFee getFee() {
    return fee;
  }


  public void setFee(OBReadOffer1DataFee fee) {
    this.fee = fee;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OBReadOffer1DataOffer obReadOffer1DataOffer = (OBReadOffer1DataOffer) o;
    return Objects.equals(this.accountId, obReadOffer1DataOffer.accountId) &&
        Objects.equals(this.offerId, obReadOffer1DataOffer.offerId) &&
        Objects.equals(this.offerType, obReadOffer1DataOffer.offerType) &&
        Objects.equals(this.description, obReadOffer1DataOffer.description) &&
        Objects.equals(this.startDateTime, obReadOffer1DataOffer.startDateTime) &&
        Objects.equals(this.endDateTime, obReadOffer1DataOffer.endDateTime) &&
        Objects.equals(this.rate, obReadOffer1DataOffer.rate) &&
        Objects.equals(this.value, obReadOffer1DataOffer.value) &&
        Objects.equals(this.term, obReadOffer1DataOffer.term) &&
        Objects.equals(this.URL, obReadOffer1DataOffer.URL) &&
        Objects.equals(this.amount, obReadOffer1DataOffer.amount) &&
        Objects.equals(this.fee, obReadOffer1DataOffer.fee);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, offerId, offerType, description, startDateTime, endDateTime, rate, value, term, URL, amount, fee);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OBReadOffer1DataOffer {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("    offerType: ").append(toIndentedString(offerType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startDateTime: ").append(toIndentedString(startDateTime)).append("\n");
    sb.append("    endDateTime: ").append(toIndentedString(endDateTime)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    term: ").append(toIndentedString(term)).append("\n");
    sb.append("    URL: ").append(toIndentedString(URL)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

