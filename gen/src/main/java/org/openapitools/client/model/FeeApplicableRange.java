/*
 * Account and Transaction API Specification
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.7
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Range or amounts or rates for which the fee/charge applies
 */
@ApiModel(description = "Range or amounts or rates for which the fee/charge applies")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-29T19:18:25.258264300+02:00[Europe/Berlin]")
public class FeeApplicableRange {
  public static final String SERIALIZED_NAME_MINIMUM_AMOUNT = "MinimumAmount";
  @SerializedName(SERIALIZED_NAME_MINIMUM_AMOUNT)
  private String minimumAmount;

  public static final String SERIALIZED_NAME_MAXIMUM_AMOUNT = "MaximumAmount";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_AMOUNT)
  private String maximumAmount;

  public static final String SERIALIZED_NAME_MINIMUM_RATE = "MinimumRate";
  @SerializedName(SERIALIZED_NAME_MINIMUM_RATE)
  private String minimumRate;

  public static final String SERIALIZED_NAME_MAXIMUM_RATE = "MaximumRate";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_RATE)
  private String maximumRate;


  public FeeApplicableRange minimumAmount(String minimumAmount) {
    
    this.minimumAmount = minimumAmount;
    return this;
  }

   /**
   * Minimum Amount on which fee/charge is applicable (where it is expressed as an amount)
   * @return minimumAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum Amount on which fee/charge is applicable (where it is expressed as an amount)")

  public String getMinimumAmount() {
    return minimumAmount;
  }


  public void setMinimumAmount(String minimumAmount) {
    this.minimumAmount = minimumAmount;
  }


  public FeeApplicableRange maximumAmount(String maximumAmount) {
    
    this.maximumAmount = maximumAmount;
    return this;
  }

   /**
   * Maximum Amount on which fee is applicable (where it is expressed as an amount)
   * @return maximumAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum Amount on which fee is applicable (where it is expressed as an amount)")

  public String getMaximumAmount() {
    return maximumAmount;
  }


  public void setMaximumAmount(String maximumAmount) {
    this.maximumAmount = maximumAmount;
  }


  public FeeApplicableRange minimumRate(String minimumRate) {
    
    this.minimumRate = minimumRate;
    return this;
  }

   /**
   * Minimum rate on which fee/charge is applicable(where it is expressed as an rate)
   * @return minimumRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum rate on which fee/charge is applicable(where it is expressed as an rate)")

  public String getMinimumRate() {
    return minimumRate;
  }


  public void setMinimumRate(String minimumRate) {
    this.minimumRate = minimumRate;
  }


  public FeeApplicableRange maximumRate(String maximumRate) {
    
    this.maximumRate = maximumRate;
    return this;
  }

   /**
   * Maximum rate on which fee/charge is applicable(where it is expressed as an rate)
   * @return maximumRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum rate on which fee/charge is applicable(where it is expressed as an rate)")

  public String getMaximumRate() {
    return maximumRate;
  }


  public void setMaximumRate(String maximumRate) {
    this.maximumRate = maximumRate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeeApplicableRange feeApplicableRange = (FeeApplicableRange) o;
    return Objects.equals(this.minimumAmount, feeApplicableRange.minimumAmount) &&
        Objects.equals(this.maximumAmount, feeApplicableRange.maximumAmount) &&
        Objects.equals(this.minimumRate, feeApplicableRange.minimumRate) &&
        Objects.equals(this.maximumRate, feeApplicableRange.maximumRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minimumAmount, maximumAmount, minimumRate, maximumRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeeApplicableRange {\n");
    sb.append("    minimumAmount: ").append(toIndentedString(minimumAmount)).append("\n");
    sb.append("    maximumAmount: ").append(toIndentedString(maximumAmount)).append("\n");
    sb.append("    minimumRate: ").append(toIndentedString(minimumRate)).append("\n");
    sb.append("    maximumRate: ").append(toIndentedString(maximumRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

